# ribbon：提供负载均衡和重试功能
# 新建ribbon项目，添加启动依赖：Eureka Discovery Client。里面包含ribbon
# pom添加spring-retry依赖
# 需要在启动类上加@EnableDiscoveryClient
# 启动类中添加RestTemplate实例
#  //创建 RestTemplate 实例，并存入 spring 容器
#  //负载均衡注解，会对 RestTemplate 实例进行封装，创建动态代理对象，
#  //并切入（AOP）负载均衡代码，把请求分散分发到集群中的服务器
#  @LoadBalanced
#  @Bean
#  public RestTemplate getRestTemplate() {
#    SimpleClientHttpRequestFactory f = new SimpleClientHttpRequestFactory();
#
#    //RestTemplate 中默认的 Factory 实例中，两个超时属性默认是 -1，
#    //未启用超时，也不会触发重试
#    f.setConnectTimeout(1000);
#    f.setReadTimeout(1000);
#    return new RestTemplate(f);
#  }
# 编写Controller

spring:
  application:
    name: ribbon

server:
  port: 3001

eureka:
  client:
    service-url:
      defaultZone: http://eurekaServer1:8001/eureka, http://eurekaServer2:8002/eureka,http://eurekaServer3:8003/eureka
ribbon:
  # 更换实例的次数
  MaxAutoRetriesNextServer: 2
  # 当前实例重试次数，尝试失败会更换下一个实例
  MaxAutoRetries: 1
  # 对连接超时、读取超时都进行重试
  OkToRetryOnAllOperations: true
