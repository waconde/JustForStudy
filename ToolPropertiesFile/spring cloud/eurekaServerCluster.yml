# eureka服务端集群
# 需要在启动类上加@EnableEurekaServer
# 启用多个环境后，需要配置启动参数：--spring.profiles.active=eureka1、--spring.profiles.active=eureka2、...
# Boot Dashboard中右键eurekaServer项目->Duplicate Config有几个server分几个->对每个config右键Open Config->
# 修改name为对应服务器名以示区分，arguments中Program arguments中添加--spring.profiles.active=eureka1。
# 依次为其他服务器添加各自对应参数
# 如果是在命令行中启动，添加参数：java -jar xxx.jar --spring.profiles.active=eureka1
spring:
  application:
    name: eureka-server
eureka:
  server:
    # eureka 的自我保护状态：
    # 心跳失败的比例，在15分钟内是否低于85%,
    # 如果出现了低于的情况，Eureka Server会将当前的实例注册信息保护起来，
    # 同时提示一个警告，控制台上底部红字。
    # 一旦进入保护模式，Eureka Server将会尝试保护其服务注册表中的信息，
    # 不再删除服务注册表中的数据。也就是不会注销任何微服务。
    enableSelfPreservation: false
# # 集群需要注释这两项，否则页面显示unavailable-replicas
# client:
#   fetch-registry: false
#   register-with-eureka: false

---
spring:
  # 配置各自的环境名
  profiles: eurekaServer1

server:
  port: 8001
  
# eurekaServer1 向 eurekaServer2、3 注册
eureka:
  instance:
    hostname: eurekaServer1
  client:
    service-url: 
      # 默认的注册地址。向其他server注册
      defaultZone: http://eurekaServer2:8002/eureka, http://eurekaServer3:8003/eureka

---
spring:
  profiles: eurekaServer2

server:
  port: 8002
  
# eurekaServer2 向 eurekaServer1、3 注册
eureka:
  instance:
    hostname: eurekaServer2
  client:
    service-url:
      defaultZone: http://eurekaServer1:8001/eureka, http://eurekaServer3:8003/eureka

---
spring:
  profiles: eurekaServer3

server:
  port: 8003
  
# eurekaServer3 向 eurekaServer1、2 注册
eureka:
  instance:
    hostname: eurekaServer3
  client:
    service-url:
      defaultZone: http://eurekaServer1:8001/eureka, http://eurekaServer2:8002/eureka
